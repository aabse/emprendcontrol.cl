---
import imgLogo from "@/assets/images/logo_emprend-control.webp";
import { Image } from 'astro:assets';
import MenuIcon from "./icons/MenuIcon.astro";

const navItems = [
  { name: "Inicio", url: "#inicio" },
  { name: "Sobre Nosotros", url: "#about" },
  { name: "Servicios", url: "#servicios" },
  { name: "Contacto", url: "#contacto" },
];
---

<header aria-label="Navegación Principal" id="main-header" class="fixed w-full top-0 left-0 z-50 transition-all duration-300">
  <div class="container mx-auto px-4">
    <nav class="flex items-center justify-between py-4">
      <!-- Logo -->
      <a href="#inicio" class="flex items-center space-x-2 z-50">
        <div class="h-16 w-16">
          <Image 
            src={imgLogo} 
            alt="Logo Emprend Control"
            loading="eager"
            width={80}
            sizes="(max-width: 480px) 40vw, (max-width: 768px) 25vw, 15vw"
            format="webp" />
        </div>
        <span class="text-xl font-bold text-header-text">Emprend Control</span>
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-1">
        <ul class="flex space-x-1">
          {navItems.map((item) => (
            <li>
              <a 
                href={item.url} 
                class="px-4 py-2 rounded-lg text-header-text hover:text-green-600 hover:bg-white/50 transition-colors"
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
        
        <a 
          href="#contacto" 
          class="ml-4 px-5 py-2 bg-gradient-to-r from-green-600 to-green-700 text-white rounded-lg shadow-md shadow-green-600/20 hover:shadow-lg hover:shadow-green-600/30 transition-all transform hover:scale-105"
        >
          Solicitar Servicio
        </a>
      </div>
      
      <!-- Mobile Menu Button -->
      <button id="mobile-menu-button" class="md:hidden flex items-center z-50" aria-label="Abrir menú">
        <MenuIcon class="h-6 w-6 text-header-text" />
      </button>
      
      <!-- Mobile Navigation -->
      <div id="mobile-menu" class="fixed inset-0 bg-gradient-to-br from-gray-700/95 to-gray-800/95 backdrop-blur-sm flex flex-col items-center justify-center space-y-8 transform translate-x-full transition-transform duration-300 md:hidden">
        <ul class="flex flex-col items-center space-y-6">
          {navItems.map((item) => (
            <li>
              <a 
                href={item.url} 
                class="text-xl font-medium text-white hover:text-green-400 transition-colors mobile-link"
              >
                {item.name}
              </a>
            </li>
          ))}
        </ul>
        
        <a 
          href="#contacto" 
          class="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg shadow-md shadow-green-500/20 hover:shadow-lg hover:shadow-green-500/30 transition-all transform hover:scale-105 mobile-link"
        >
          Solicitar Servicio
        </a>
      </div>
    </nav>
  </div>
</header>

<script>
  // Cambiar estilo del navbar al hacer scroll
  const header: any = document.getElementById('main-header');
  const mobileMenuButton: any = document.getElementById('mobile-menu-button');
  const mobileMenu: any = document.getElementById('mobile-menu');
  const mobileLinks: any = document.querySelectorAll('.mobile-link');
  
  // Función para actualizar el estilo del header según el scroll
  function updateHeaderStyle() {
    if (window.scrollY > 50) {
      header.classList.add('bg-gray-700/90', 'backdrop-blur-sm', 'shadow-md');
      header.classList.remove('bg-transparent');
      document.documentElement.style.setProperty('--header-text-color', '#ffffff');
    } else {
      header.classList.remove('bg-gray-700/90', 'backdrop-blur-sm', 'shadow-md');
      header.classList.add('bg-transparent');
      document.documentElement.style.setProperty('--header-text-color', '#ffffff');
    }
  }
  
  // Inicializar el estilo del header
  updateHeaderStyle();
  
  // Actualizar el estilo del header al hacer scroll
  window.addEventListener('scroll', updateHeaderStyle);
  
  // Función para alternar el menú móvil
  function toggleMobileMenu() {
    const isOpen = mobileMenu.classList.contains('translate-x-0');
    
    if (isOpen) {
      // Cerrar menú
      mobileMenu.classList.remove('translate-x-0');
      mobileMenu.classList.add('translate-x-full');
      document.body.classList.remove('overflow-hidden');
      
      // Cambiar icono a hamburguesa
      mobileMenuButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-header-text" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      `;
    } else {
      // Abrir menú
      mobileMenu.classList.add('translate-x-0');
      mobileMenu.classList.remove('translate-x-full');
      document.body.classList.add('overflow-hidden');
      
      // Cambiar icono a X
      mobileMenuButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-header-text" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      `;
    }
  }
  
  // Evento click para el botón del menú móvil
  mobileMenuButton.addEventListener('click', toggleMobileMenu);
  
  // Cerrar el menú móvil al hacer click en un enlace
  mobileLinks.forEach((link: any) => {
    link.addEventListener('click', toggleMobileMenu);
  });
</script>

<style>
  .text-header-text {
    color: var(--header-text-color, #ffffff);
  }
</style>
